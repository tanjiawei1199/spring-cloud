<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iking.userservice.dao.TUserMapper" >
  <resultMap id="BaseResultMap" type="com.iking.module.user.model.TUser" >
    <id column="f_id" property="fId" jdbcType="VARCHAR" />
    <result column="f_dept_id" property="fDeptId" jdbcType="VARCHAR" />
    <result column="f_account" property="fAccount" jdbcType="VARCHAR" />
    <result column="f_password" property="fPassword" jdbcType="VARCHAR" />
    <result column="f_user_name" property="fUserName" jdbcType="VARCHAR" />
    <result column="f_phone" property="fPhone" jdbcType="VARCHAR" />
    <result column="f_state" property="fState" jdbcType="INTEGER" />
    <result column="f_create_time" property="fCreateTime" jdbcType="TIMESTAMP" />
    <result column="f_last_login_time" property="fLastLoginTime" jdbcType="TIMESTAMP" />
    <result column="f_last_login_ip" property="fLastLoginIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    f_id, f_dept_id, f_account, f_password, f_user_name, f_phone, f_state, f_create_time, 
    f_last_login_time, f_last_login_ip
  </sql>
    <!--根据部门id查询部门下的人员-->
  <select id="selectByDeptId" resultMap="BaseResultMap">
   select f_id,f_dept_id,f_account,f_user_name,f_phone,f_state,
    f_create_time,f_last_login_time,f_last_login_ip
   from t_user where f_state != 0 and f_dept_id = #{fDeptId,jdbcType=VARCHAR}
  </select>
  <!--查询全部用户信息-->
  <select id="selectAll" resultMap="BaseResultMap">
   select f_id,f_dept_id,f_account,f_user_name,f_phone,f_state,
  f_create_time,f_last_login_time,f_last_login_ip
   from t_user where f_state != 0
  </select>
  <!--分页查询符合条件的账号信息-->
  <select id="selectByPage" resultMap="BaseResultMap">
      select t1.f_id,t1.f_dept_id,t1.f_account,t1.f_user_name,t1.f_phone,t1.f_state,
      t1.f_create_time,t1.f_last_login_time,t1.f_last_login_ip
      from
      t_user t1
      where t1.f_state != 0
      <if test="req.fDeptId != null and req.fDeptId != ''">
          and t1.f_dept_id = #{req.fDeptId,jdbcType=VARCHAR}
      </if>
      <if test="req.fAccount != null and req.fAccount != ''">
          and t1.f_account like concat(concat("%",#{req.fAccount,jdbcType=VARCHAR}),"%")
      </if>
      <if test="req.fUserName != null and req.fUserName!= ''">
          and t1.f_user_name like concat(concat("%",#{req.fUserName,jdbcType=VARCHAR}),"%")
      </if>
      order by t1.f_create_time desc
      limit #{page.startIndex,jdbcType=INTEGER},#{page.pageSize,jdbcType=INTEGER}
  </select>
  <!--查询符合条件的账号数量-->
  <select id="selectNumByPage" parameterType="com.iking.module.user.model.http.HttpSelectUserInfoReq"
          resultType="java.lang.Integer">
      select count(*) from
      t_user
      where f_state != 0
      <if test="req.fDeptId != null and req.fDeptId != ''">
          and f_dept_id = #{req.fDeptId,jdbcType=VARCHAR}
      </if>
      <if test="req.fAccount != null and req.fAccount != ''">
          and f_account like concat(concat("%",#{req.fAccount,jdbcType=VARCHAR}),"%")
      </if>
      <if test="req.fUserName != null and req.fUserName!= ''">
          and f_user_name like concat(concat("%",#{req.fUserName,jdbcType=VARCHAR}),"%")
      </if>

  </select>
  <!-- 根据账号查询账号信息 -->
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
	select * from t_user where f_account =
	#{fAccount,jdbcType=VARCHAR} and
	f_state != 0
</select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where f_id = #{fId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_user
    where f_id = #{fId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iking.module.user.model.TUser" >
    insert into t_user (f_id, f_dept_id, f_account, 
      f_password, f_user_name, f_phone, 
      f_state, f_create_time, f_last_login_time, 
      f_last_login_ip)
    values (#{fId,jdbcType=VARCHAR}, #{fDeptId,jdbcType=VARCHAR}, #{fAccount,jdbcType=VARCHAR}, 
      #{fPassword,jdbcType=VARCHAR}, #{fUserName,jdbcType=VARCHAR}, #{fPhone,jdbcType=VARCHAR}, 
      #{fState,jdbcType=INTEGER}, #{fCreateTime,jdbcType=TIMESTAMP}, #{fLastLoginTime,jdbcType=TIMESTAMP}, 
      #{fLastLoginIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iking.module.user.model.TUser" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fId != null" >
        f_id,
      </if>
      <if test="fDeptId != null" >
        f_dept_id,
      </if>
      <if test="fAccount != null" >
        f_account,
      </if>
      <if test="fPassword != null" >
        f_password,
      </if>
      <if test="fUserName != null" >
        f_user_name,
      </if>
      <if test="fPhone != null" >
        f_phone,
      </if>
      <if test="fState != null" >
        f_state,
      </if>
      <if test="fCreateTime != null" >
        f_create_time,
      </if>
      <if test="fLastLoginTime != null" >
        f_last_login_time,
      </if>
      <if test="fLastLoginIp != null" >
        f_last_login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fId != null" >
        #{fId,jdbcType=VARCHAR},
      </if>
      <if test="fDeptId != null" >
        #{fDeptId,jdbcType=VARCHAR},
      </if>
      <if test="fAccount != null" >
        #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="fPassword != null" >
        #{fPassword,jdbcType=VARCHAR},
      </if>
      <if test="fUserName != null" >
        #{fUserName,jdbcType=VARCHAR},
      </if>
      <if test="fPhone != null" >
        #{fPhone,jdbcType=VARCHAR},
      </if>
      <if test="fState != null" >
        #{fState,jdbcType=INTEGER},
      </if>
      <if test="fCreateTime != null" >
        #{fCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fLastLoginTime != null" >
        #{fLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fLastLoginIp != null" >
        #{fLastLoginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iking.module.user.model.TUser" >
    update t_user
    <set >
      <if test="fDeptId != null" >
        f_dept_id = #{fDeptId,jdbcType=VARCHAR},
      </if>
      <if test="fAccount != null" >
        f_account = #{fAccount,jdbcType=VARCHAR},
      </if>
      <if test="fPassword != null" >
        f_password = #{fPassword,jdbcType=VARCHAR},
      </if>
      <if test="fUserName != null" >
        f_user_name = #{fUserName,jdbcType=VARCHAR},
      </if>
      <if test="fPhone != null" >
        f_phone = #{fPhone,jdbcType=VARCHAR},
      </if>
      <if test="fState != null" >
        f_state = #{fState,jdbcType=INTEGER},
      </if>
      <if test="fCreateTime != null" >
        f_create_time = #{fCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fLastLoginTime != null" >
        f_last_login_time = #{fLastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fLastLoginIp != null" >
        f_last_login_ip = #{fLastLoginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where f_id = #{fId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iking.module.user.model.TUser" >
    update t_user
    set f_dept_id = #{fDeptId,jdbcType=VARCHAR},
      f_account = #{fAccount,jdbcType=VARCHAR},
      f_password = #{fPassword,jdbcType=VARCHAR},
      f_user_name = #{fUserName,jdbcType=VARCHAR},
      f_phone = #{fPhone,jdbcType=VARCHAR},
      f_state = #{fState,jdbcType=INTEGER},
      f_create_time = #{fCreateTime,jdbcType=TIMESTAMP},
      f_last_login_time = #{fLastLoginTime,jdbcType=TIMESTAMP},
      f_last_login_ip = #{fLastLoginIp,jdbcType=VARCHAR}
    where f_id = #{fId,jdbcType=VARCHAR}
  </update>
</mapper>